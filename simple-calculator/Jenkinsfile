pipeline {
    agent { node { label 'maven' } }
    options { skipDefaultCheckout true }
    stages {
        stage('Checkout') {
            steps {
                sendNotification('started', 'team@example.com')
                git branch: 'notifications',
                    url: 'https://github.com/jomcdona/DO400-apps'
            }
        }
        stage('Test') {
            steps {
                dir('simple-calculator') {
                    sh './mvnw clean test'
                }
            }
        }
        stage('Check Style') {
            steps {
                dir('simple-calculator') {
                    script {
                        try {
                            sh './mvnw clean checkstyle:check'
                        }
                        catch (Exception e) {
                          sendWarningAlert("${STAGE_NAME}", 'dev@example.com')
                          unstable("${STAGE_NAME} stage failed!")
                        }
                    }    
                }
            }
        }
    }
    post {
       always {
           sendNotification('finished', 'team@example.com')
       }
       failure {
           sendFailureAlert('team@example.com')
       }
    }
}

void sendNotification(String action, String email) {
    mail to: "${email}",
        subject: "Pipeline ${action}: ${currentBuild.fullDisplayName}",
        body: "The following pipeline ${action}: $env.BUILD_URL}"
}

void sendFailureAlert(String email) {
    mail to: "${email}",
        subject: "Pipeline Failed: ${currentBuild.fullDisplayName}",
        body: "The following pipeline failed: ${env.BUILD_URL}"
}

void sendWarningAlert(String stage, String email) {
    mail to: "${email}",
        subject: "${stage} stage failed: ${currentBuild.fullDisplayName}",
        body: "The ${stage} stage failed: ${env.BUILD_URL}"
}
